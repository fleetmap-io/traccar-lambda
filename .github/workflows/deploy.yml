name: Deploy
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      IMAGE_URI: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/traccar-lambda:latest
    steps:

      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: 'jcardus/traccar'
          ref: 'master'
          path: traccar

      - run: cp -vr src/* traccar/src

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Build with Gradle
        working-directory: traccar
        run: ./gradlew build --no-daemon -x checkstyleMain

      - name: Build installers
        working-directory: traccar/setup
        run: |
          sudo apt-get install makeself
          wget -q https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.2+13/OpenJDK21U-jdk_x64_linux_hotspot_21.0.2_13.tar.gz
          mkdir -p out/{conf,data,lib,logs,web,schema,templates}
          cp ../target/tracker-server.jar out
          cp ../target/lib/* out/lib
          echo "cp -vr * /opt/traccar" > out/setup.sh
          chmod +x out/setup.sh
          tar -xf OpenJDK21U-jdk_x64_linux_hotspot_21.0.2_13.tar.gz
          jlink --module-path jdk-*/jmods --add-modules java.se,jdk.charsets,jdk.crypto.ec,jdk.unsupported --output out/jre
          rm -rf jdk-*
          makeself --needroot --quiet --notemp out traccar.run "traccar" ./setup.sh
          mv traccar.run ../..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE_URI }}
          provenance: false   # ← disables BuildKit attestation metadata (required for Lambda)
          sbom: false         # ← disables build metadata that may break Lambda

      - name: Update lambda
        run: >
          aws lambda update-function-code
          --function-name ${{ vars.FUNCTION_NAME }}
          --image-uri ${{ env.IMAGE_URI }}
          --no-cli-pager
      - name: Wait for lambda update
        run: >
          aws lambda wait function-updated
          --function-name ${{ vars.FUNCTION_NAME }}

